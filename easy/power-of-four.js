/**
 * 相等优雅的解法，用到了 按与位 &
 * 因为4的幂也一定是2的幂，所以可以 n & n - 1来判断n是否是2的幂
 * 按与位会把两侧数转成二进制对比，当一个数位2的幂时
 * 转换为二进制数后一定是一个1跟多个0
 * 而n - 1是一个奇数，转换为2进制后位数会比n少一位，并且是多个1
 * 按照按与位计算方法只有两个数对应数的位数都为1时才会返回1
 * 当它为2的幂时只会返回0
 * 而4的幂数转换为2进制后为1跟偶数个0
 * 所以只需要再把n与 1010101这样的数做&运算，返回0时则为4的幂
 * 而题目限制了最大输入数为2的32次幂
 * 10101010101010101010101010101010，用16进制可以表示为aaaaaaaa
 */

var isPowerOfFour = function (n) {
  return n > 0 && (n & (n - 1)) == 0 && (n & (0xaaaaaaaa)) == 0;
};

/**
 * 最简单的循环，类似于263丑数
 * 当一个数模4为0时可能是4的倍数也可能是4的幂
 * 这时把n除4再做判断，最终应该为4的0次幂 1
 */
var isPowerOfFour = function (n) {
  if (n < 1) {
    return false;
  }
  while (n % 4 == 0) {
    n /= 4
  }
  return n == 1;
};
